name: Book

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:    
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cache-version: 1
        r-version: [4.0.3]

    steps:
      - uses: actions/checkout@v2
      - name: Install R
        uses: r-lib/actions/setup-r@v1
        with:
          r-version: ${{ matrix.r-version }}
      - name: Install renv and query dependencies
        run: |
          install.packages("pak", repos = "https://r-lib.github.io/p/pak/dev/")
          saveRDS(pak::pkg_deps("local::.", dependencies = TRUE), ".github/r-depends.rds")
        shell: Rscript {0}

      - name: Get R and OS version
        id: get-version
        run: |
          cat("##[set-output name=os-version;]", sessionInfo()$running, "\n", sep = "")
          cat("##[set-output name=r-version;]", R.Version()$version.string, sep = "")
        shell: Rscript {0}

      - name: Restore Renv package cache
        uses: actions/cache@v2
        with:
          path: $HOME/.local/share/renv
          key: ${{ steps.get-version.outputs.os-version }}-${{ steps.get-version.outputs.r-version }}-${{ matrix.r-version }}-${{ hashFiles('renv.lock') }}
          restore-keys: ${{ steps.get-version.outputs.os-version }}-${{ steps.get-version.outputs.r-version }}-${{inputs.cache-version }}-

      - name: Install renv dependencies
        shell: bash
        run: |
          R -e 'install.packages("renv")'
          R -e 'renv::restore()'
      - name: Don't use tar 1.30 from Rtools35 to store the cache
        shell: bash
        run: |
          if command -v /c/Rtools/bin/tar && /c/Rtools/bin/tar --version | grep -q 'tar (GNU tar) 1.30'
            then echo 'C:/Program Files/Git/usr/bin' >> $GITHUB_PATH
          fi
      - name: Install Pandoc
        uses: r-lib/actions/setup-pandoc@v1
        with:
          pandoc-version: '2.14.2'
      - name: Deploy the book
        run: sh ./scripts/moveFile.sh
